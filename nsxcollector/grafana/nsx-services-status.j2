{# be aware, for quote inside a value like on query, you must add \ before each quote #}
{
    "type": "{{type}}",
    "title": "{{name}}",
    "gridPos": {
      "h": 10,
      "w": 13,
      "x": 7,
      "y": 0
    },
    "transformations": [{
      "id": "renameByRegex",
      "options": {
        "regex": "_measurement",
        "renamePattern": "Process"
      }
    }],
    
    "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false,
            "filterable": false
          },
          "mappings": [
            {
              "type": "value",
              "options": {
                "STABLE": {
                  "color": "green",
                  "index": 0
                }
              }
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": ""
              },
              {
                "value": "",
                "color": "#EAB839"
              }
            ]
          },
          "color": {
            "mode": "fixed"
          },
          "noValue": "STABLE"
        },

        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Process"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "auto"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "{{node_ip}}"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-background-solid"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Process"
            },
            "properties": [
              {
              "id": "custom.width",
              "value": 200
              }
            ]
            }
        ]
    },
    "targets": [{
      "datasource": {
        "type": "influxdb",
        "uid": "{{datasource_uid}}"
      },
      "query": "from(bucket: \"{{datasource_bucket}}\") |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn: (r) => r[\"_measurement\"] == \"CONTROLLER\" or r[\"_measurement\"] == \"DATASTORE\" or r[\"_measurement\"] == \"CORFU_NONCONFIG\" or r[\"_measurement\"] == \"CM-INVENTORY\" or r[\"_measurement\"] == \"CLUSTER_BOOT_MANAGER\" or r[\"_measurement\"] == \"MANAGER\" or r[\"_measurement\"] == \"MESSAGING-MANAGER\" or r[\"_measurement\"] == \"MONITORING\") |> filter(fn: (r) => r[\"_field\"] == \"STATE\") |> last(column: \"_value\") |> group(columns: [\"host\"]) |> pivot(rowKey:[\"_measurement\"], columnKey: [\"host\"], valueColumn: \"_value\")",
      "refId": "A0"
    }],
    "datasource": {
        "type": "influxdb",
        "uid": "{{datasource_uid}}"
    }
}